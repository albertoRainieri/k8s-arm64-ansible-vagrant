---
- name: Install and Configure Kubernetes on ARM64 Ubuntu
  hosts: k8s_cluster
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
    - name: Include variables
      ansible.builtin.include_vars:
        vars.yaml

    - name: Disable and turn off swap
      block:
        - name: Remove swap from fstab
          ansible.builtin.replace:
            path: /etc/fstab
            regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
            replace: '# \1'
        - name: Disable swap
          ansible.builtin.command: swapoff -a
          ignore_errors: yes

    - name: Install sshpass
      ansible.builtin.apt:
        name: sshpass
        state: present

    - name: Stop and disable firewall
      ansible.builtin.systemd:
        name: ufw
        state: stopped
        enabled: no
      ignore_errors: yes

    - name: Enable and load kernel modules
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/containerd.conf
        block: |
          overlay
          br_netfilter
        create: yes

    - name: Load kernel modules
      ansible.builtin.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure kernel parameters
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/kubernetes.conf
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.ipv4.conf.all.rp_filter=0
        create: yes

    - name: Apply kernel parameters
      ansible.builtin.command: sysctl --system

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - wget
          - net-tools
          - software-properties-common
        state: present

    - name: Install containerd from Ubuntu repositories
      ansible.builtin.apt:
        name: containerd
        state: present

    - name: Add Docker GPG key
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor > /tmp/docker.gpg && sudo mv /tmp/docker.gpg /etc/apt/keyrings/docker.gpg

      register: docker_gpg_result
      changed_when: docker_gpg_result.rc == 0
      failed_when: docker_gpg_result.rc != 0
      become: yes

    - name: Debug Docker GPG key installation
      ansible.builtin.debug:
        msg: |
          Docker GPG key installation completed.
          Return code: {{ docker_gpg_result.rc }}
          stdout: {{ docker_gpg_result.stdout }}
          stderr: {{ docker_gpg_result.stderr }}
      when: docker_gpg_result is defined

    - name: Check if Docker GPG key file exists
      ansible.builtin.stat:
        path: /etc/apt/keyrings/docker.gpg
      register: docker_gpg_file_check

    - name: Fail if Docker GPG key file is missing
      ansible.builtin.fail:
        msg: |
          Docker GPG key file was not created successfully.
          Please check network connectivity and Docker repository availability.
      when: not docker_gpg_file_check.stat.exists

    - name: Debug Docker GPG key file status
      ansible.builtin.debug:
        msg: |
          Docker GPG key file check:
          File exists: {{ docker_gpg_file_check.stat.exists }}
          File size: {{ docker_gpg_file_check.stat.size | default('N/A') }}
          File permissions: {{ docker_gpg_file_check.stat.mode |
            default('N/A') }}
      when: docker_gpg_file_check is defined

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: no

    - name: Configure containerd
      ansible.builtin.command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Create containerd config directory
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Write containerd configuration
      ansible.builtin.copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: '0644'

    - name: Enable SystemdCgroup in containerd config
      ansible.builtin.replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Start and enable containerd
      ansible.builtin.systemd:
        name: containerd
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Update apt cache for Docker repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Add Kubernetes GPG key
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key |  sudo gpg --dearmor > /tmp/kubernetes-apt-keyring.gpg && sudo mv /tmp/kubernetes-apt-keyring.gpg /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
        state: present

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Kubernetes components
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: Enable kubelet service
      ansible.builtin.systemd:
        name: kubelet
        enabled: yes

    - name: Update /etc/hosts file
      ansible.builtin.blockinfile:
        path: /etc/hosts
        block: |
          {{ ip_master }}   kmaster.example.com     kmaster
          {{ ip_worker1 }}  kworker1.example.com    kworker1
          {{ ip_worker2 }}  kworker2.example.com    kworker2
        marker: "# {mark} ANSIBLE MANAGED BLOCK - kubernetes cluster"

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create docker group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add vagrant user to docker group
      ansible.builtin.user:
        name: vagrant
        groups: docker
        append: yes

    - name: Install additional tools
      ansible.builtin.apt:
        name:
          - git
          - nfs-common
          - bash-completion
        state: present

    - name: Configure SSH for password authentication
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication yes'
        state: present
      become: yes

    - name: Allow root login
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin yes'
        state: present
      become: yes

    - name: Set root password
      ansible.builtin.user:
        name: root
        password: "{{ 'kubeadmin' | password_hash('sha512') }}"
      become: yes

    - name: Check SSH service name
      ansible.builtin.stat:
        path: /etc/init.d/ssh
      register: ssh_service_check

    - name: Reload SSH service (Ubuntu/Debian)
      ansible.builtin.systemd:
        name: ssh
        state: reloaded
      when: ssh_service_check.stat.exists
      become: yes

    - name: Reload SSH service (Alternative)
      ansible.builtin.systemd:
        name: sshd
        state: reloaded
      when: not ssh_service_check.stat.exists
      ignore_errors: yes
      become: yes 